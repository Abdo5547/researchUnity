# Generated by Django 5.0.6 on 2024-06-10 18:41

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/uploads/images')),
                ('institution', models.CharField(blank=True, max_length=255)),
                ('faculte', models.CharField(blank=True, max_length=255)),
                ('departement', models.CharField(blank=True, max_length=255)),
                ('degree', models.CharField(blank=True, max_length=255)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('gender', models.CharField(blank=True, max_length=100)),
                ('keywords', models.CharField(blank=True, max_length=1000)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('online', models.BooleanField(default=False)),
                ('followers', models.ManyToManyField(related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Citation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('backend.customuser',),
        ),
        migrations.CreateModel(
            name='Auteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messages', models.TextField()),
                ('dateenvoie', models.DateTimeField(auto_now_add=True)),
                ('membres', models.ManyToManyField(related_name='groupes_participes', to=settings.AUTH_USER_MODEL)),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupes_responsable', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('contenu', models.TextField()),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('groupe', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projet', to='backend.groupe')),
                ('membres', models.ManyToManyField(related_name='projets_participes', to=settings.AUTH_USER_MODEL)),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projets_diriges', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='groupe',
            name='projet_associe',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groupe_projet', to='backend.projet'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='projets',
            field=models.ManyToManyField(related_name='participants', to='backend.projet'),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='media/documents/')),
                ('titre', models.CharField(max_length=200)),
                ('date', models.DateField(auto_now_add=True)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('vues', models.PositiveIntegerField(default=0)),
                ('keywords', models.JSONField(default=list)),
                ('doi', models.CharField(default='', max_length=255, unique=True)),
                ('citations_count', models.PositiveIntegerField(default=0)),
                ('reference_count', models.PositiveIntegerField(default=0)),
                ('type', models.CharField(default='', max_length=50)),
                ('auteurs', models.ManyToManyField(related_name='publications', through='backend.Auteur', to=settings.AUTH_USER_MODEL)),
                ('cited_pub', models.ManyToManyField(related_name='cited_by', through='backend.Citation', to='backend.publication')),
                ('mainAuteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_publications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Commentaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires_ecrits', to=settings.AUTH_USER_MODEL)),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='backend.commentaire')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires', to='backend.publication')),
            ],
        ),
        migrations.AddField(
            model_name='citation',
            name='cited_publication',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='cited_citations', to='backend.publication'),
        ),
        migrations.AddField(
            model_name='citation',
            name='citing_publication',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='citing_citations', to='backend.publication'),
        ),
        migrations.AddField(
            model_name='auteur',
            name='publication',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='backend.publication'),
        ),
        migrations.CreateModel(
            name='Publicationsaved',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='backend.publication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_publications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('type', models.CharField(default='', max_length=50)),
                ('document', models.FileField(default=None, upload_to='media/documents/')),
                ('contenu', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('reply', models.PositiveIntegerField(default=0)),
                ('recommendations', models.PositiveIntegerField(default=0)),
                ('views', models.PositiveIntegerField(default=0)),
                ('followers', models.PositiveIntegerField(default=0)),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions_postees', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FollowingQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_questions', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed_by', to='backend.question')),
            ],
        ),
        migrations.CreateModel(
            name='RecommendedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommended_by', to='backend.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommended_questions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('cited_publication', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='cited_references', to='backend.publication')),
                ('citing_publication', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='citing_references', to='backend.publication')),
            ],
        ),
        migrations.AddField(
            model_name='publication',
            name='references',
            field=models.ManyToManyField(related_name='referred_by', through='backend.Reference', to='backend.publication'),
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses_faites', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='backend.question')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='backend.reponse')),
            ],
        ),
        migrations.CreateModel(
            name='Doctorate',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervised_doctorates', to='backend.professor')),
            ],
            options={
                'abstract': False,
            },
            bases=('backend.customuser',),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('followed_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followerships', to=settings.AUTH_USER_MODEL)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('follower', 'followed_user')},
            },
        ),
    ]
